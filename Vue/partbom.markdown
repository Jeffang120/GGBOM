# PartBom.vue 文件功能详细介绍

## 文件概述
`PartBom.vue` 是一个基于 Vue 3 + Element Plus 的综合性部件管理和BOM（物料清单）管理组件，实现了完整的部件生命周期管理和BOM关系管理功能。文件总计 **6326 行**，包含模板、脚本和样式三大部分。

---

## 一、模板部分 (第1-1250行)

### 1.1 主界面布局 (第1-120行)
- **搜索区域** (第3-64行)：实现统一搜索界面
  - 关键字搜索：支持按部件名称模糊搜索
  - 精确查询：支持按部件编码精确查找
  - 搜索提示：自动筛选最新版本和最新迭代
- **内容区域** (第65-120行)：包含操作栏和数据表格
  - 创建按钮：触发新增部件对话框
  - 数据表格：显示部件列表（编码、名称、版本号、装配模式、分类码）
  - 操作列：编辑和删除按钮

### 1.2 创建部件对话框 (第121-500行)
- **基本信息卡片** (第121-250行)：
  - 部件名称、默认单位、来源仓库、装配模式选择
  - 分类选择按钮，触发分类选择对话框
- **扩展属性卡片** (第251-350行)：
  - 动态加载分类相关的扩展属性
  - 根据选择的分类自动生成属性表单
- **对话框底部** (第351-500行)：
  - 创建和取消按钮
  - 加载状态处理

### 1.3 编辑部件对话框 (第501-900行)
- **标签页结构** (第501-550行)：
  - 基本信息标签页
  - BOM清单标签页
  - 版本管理标签页
- **BOM管理功能** (第551-750行)：
  - 头部信息区域：显示当前编辑部件信息
  - 功能按钮：新增子项、查看BOM清单、查看父项
  - 统计信息：子部件数量、父部件数量、BOM层级
  - BOM子部件列表：显示子部件详情，支持修改和删除
- **版本管理功能** (第751-900行)：
  - 版本列表显示
  - 删除最新版本功能
  - 版本详情查看

### 1.4 BOM相关对话框 (第901-1250行)
- **新增子项对话框** (第901-1000行)：
  - 1200px宽度对话框
  - 搜索功能：按名称、编码、分类码筛选
  - 部件列表：显示所有部件最新版本
  - 防自引用：当前编辑部件按钮禁用
- **BOM配置对话框** (第1001-1100行)：
  - 显示父子部件关系
  - 位号和数量输入
  - 确认创建BOM链接
- **修改BOM子项对话框** (第1101-1150行)：
  - 橙色主题设计
  - 位号和数量修改
- **查看父项对话框** (第1151-1200行)：
  - 灰色主题，800px宽度
  - 显示父部件列表和统计信息
- **BOM树对话框** (第1201-1250行)：
  - 蓝色主题，800px宽度
  - 树形结构展示BOM层级关系
  - 懒加载支持

---

## 二、脚本部分 (第1251-5500行)

### 2.1 导入和基础配置 (第1251-1300行)
```javascript
// 导入Vue 3核心功能
import { ref, reactive, onMounted, watch } from 'vue'
// 导入Element Plus组件和图标
import { ElMessage, ElMessageBox } from 'element-plus'
// 导入HTTP请求库
import axios from 'axios'
```

### 2.2 响应式数据定义 (第1301-1400行)
- **基础状态变量**：加载状态、对话框显示状态
- **表单数据**：创建表单、编辑表单、搜索表单
- **列表数据**：部件列表、BOM数据、版本数据
- **分类相关**：分类树数据、属性数据

### 2.3 部件管理核心功能 (第1401-2000行)

#### 2.3.1 数据获取和处理 (第1401-1600行)
- **`fetchPartData()`** (第1401-1450行)：获取所有部件数据
  - 调用 `/api/part/getAll` 接口
  - 数据映射和最新版本筛选
  - 错误处理和加载状态管理
- **`mapPartData()`** (第1451-1500行)：数据映射函数
  - 提取部件关键信息
  - 格式化显示数据
- **`filterLatestVersionsForAll()`** (第1501-1600行)：最新版本筛选
  - 按masterId分组
  - 筛选最新版本和最新迭代

#### 2.3.2 搜索功能 (第1601-1800行)
- **`handleUnifiedSearch()`** (第1601-1650行)：统一搜索处理
- **`searchPartByKeyword()`** (第1651-1700行)：关键字搜索
- **`searchPartById()`** (第1701-1750行)：精确查询
- **`handleUnifiedReset()`** (第1751-1800行)：重置搜索

#### 2.3.3 部件操作 (第1801-2000行)
- **`handleEditPart()`** (第1801-1900行)：编辑部件
  - 获取部件详细信息
  - 加载分类属性
  - 初始化编辑表单
- **`handleDeletePart()`** (第1901-1950行)：删除部件
- **`createPart()`** (第1951-2000行)：创建部件

### 2.4 BOM管理核心功能 (第2001-3500行)

#### 2.4.1 BOM子项管理 (第2001-2500行)
- **`handleAddBomItem()`** (第2001-2050行)：新增子项入口
- **`loadAllPartsForBom()`** (第2051-2150行)：加载所有部件供选择
- **`handleAddBomRelation()`** (第2151-2200行)：添加BOM关系
- **`confirmCreateBomLink()`** (第2201-2350行)：确认创建BOM链接
  - 表单验证
  - 获取子部件masterId
  - 构造BOM链接数据
  - 调用 `/api/PartBomLink/create` 接口
- **`loadBomChildParts()`** (第2351-2500行)：加载BOM子部件列表
  - 调用 `/api/PartBomLink/query-by-source-id` 接口
  - 通过masterId获取子部件详情
  - 数据处理和显示

#### 2.4.2 BOM子项编辑和删除 (第2501-2800行)
- **`handleEditBomChild()`** (第2501-2550行)：编辑BOM子项
- **`confirmUpdateBomChild()`** (第2551-2650行)：确认更新BOM子项
  - 调用 `/api/PartBomLink/update` 接口
  - 更新位号和数量
- **`handleDeleteBomChild()`** (第2651-2750行)：删除BOM子项
  - 确认对话框
  - 调用 `/api/PartBomLink/delete` 接口
- **`handleTabClick()`** (第2751-2800行)：标签页切换处理

#### 2.4.3 查看父项功能 (第2801-3000行)
- **`handleViewParentItems()`** (第2801-2950行)：查看父项
  - 调用 `/api/PartBomLink/query-by-target-id` 接口
  - 处理父项数据显示
  - 从source对象提取父部件信息
- **数据处理逻辑** (第2951-3000行)：
  - 版本号格式化（version-iteration）
  - 装配模式显示

#### 2.4.4 BOM树功能 (第3001-3500行)
- **`handleViewBomTree()`** (第3001-3100行)：查看BOM树
  - 初始化根节点
  - 设置树形结构
- **`loadBomTreeNode()`** (第3101-3300行)：懒加载BOM树节点
  - 递归查询子部件
  - 构建树形节点数据
  - 支持多层级展开
- **`updateBomTreeStats()`** (第3301-3350行)：更新BOM树统计
- **`refreshBomTree()`** (第3351-3500行)：刷新BOM树

### 2.5 分类管理功能 (第3501-4500行)

#### 2.5.1 分类选择 (第3501-3800行)
- **`loadClassificationRootNodes()`** (第3501-3600行)：加载分类树根节点
- **`loadClassificationNode()`** (第3601-3700行)：懒加载分类树子节点
- **`handleClassificationNodeClick()`** (第3701-3800行)：分类节点点击处理

#### 2.5.2 分类确认和属性加载 (第3801-4200行)
- **`confirmClassificationSelection()`** (第3801-4000行)：确认分类选择
  - 获取分类详细信息
  - 设置分类显示名称
  - 加载分类属性
- **`loadClassificationAttributes()`** (第4001-4100行)：加载分类属性
  - 获取父级属性和直接关联属性
  - 去重处理
  - 初始化动态表单
- **`cancelClassificationSelection()`** (第4101-4200行)：取消分类选择

#### 2.5.3 编辑分类管理 (第4201-4500行)
- **编辑分类相关函数** (第4201-4500行)：
  - `loadEditClassificationRootNodes()`
  - `loadEditClassificationTreeNode()`
  - `handleEditClassificationNodeClick()`
  - `confirmEditClassificationSelection()`
  - `cancelEditClassificationSelection()`

### 2.6 版本管理功能 (第4501-5000行)
- **`loadPartVersions()`** (第4501-4600行)：加载部件所有版本
- **`markLatestVersions()`** (第4601-4700行)：标记最新版本
- **`deleteLatestVersion()`** (第4701-4800行)：删除最新版本
- **`viewVersionDetail()`** (第4801-4850行)：查看版本详情
- **`copyVersionData()`** (第4851-4900行)：复制版本数据
- **版本处理工具函数** (第4901-5000行)

### 2.7 工具函数和生命周期 (第5001-5500行)
- **数据处理工具函数** (第5001-5200行)
- **表单重置函数** (第5201-5300行)
- **对话框控制函数** (第5301-5400行)
- **生命周期钩子** (第5401-5500行)：
  - `onMounted()`：页面加载时初始化
  - `watch()`：响应式数据监听

---

## 三、样式部分 (第5501-6326行)

### 3.1 主容器样式 (第5501-5800行)
- **`.partbom-container`**：主容器布局
- **搜索区域样式**：现代化搜索界面设计
- **表格样式**：自定义表格外观

### 3.2 对话框样式 (第5801-6100行)
- **创建部件对话框**：卡片式布局，渐变色设计
- **编辑部件对话框**：标签页样式，功能区域划分
- **BOM相关对话框**：不同主题色区分功能

### 3.3 表单和按钮样式 (第6101-6326行)
- **表单增强样式**：现代化表单设计
- **按钮样式**：不同功能使用不同颜色主题
- **响应式设计**：适配不同屏幕尺寸

---

## 四、核心API接口

### 4.1 部件管理接口
- `GET /api/part/getAll`：获取所有部件
- `POST /api/part/getById`：根据ID获取部件详情
- `POST /api/part/queryByMasterId`：根据MasterID查询部件
- `POST /api/part/create`：创建部件
- `POST /api/part/update`：更新部件
- `POST /api/part/delete`：删除部件
- `POST /api/part/deleteLatestVersion`：删除最新版本

### 4.2 BOM管理接口
- `POST /api/PartBomLink/create`：创建BOM链接
- `POST /api/PartBomLink/update`：更新BOM链接
- `POST /api/PartBomLink/delete`：删除BOM链接
- `POST /api/PartBomLink/query-by-source-id`：查询子部件
- `POST /api/PartBomLink/query-by-target-id`：查询父部件

### 4.3 分类管理接口
- `GET /api/category/getAll`：获取所有分类
- `POST /api/category/getById`：根据ID获取分类详情
- `GET /api/category/children`：获取子分类
- `GET /api/EXADefinitionLink/getParentAttributesByClassification`：获取父级属性
- `GET /api/EXADefinitionLink/listByClassification`：获取分类属性

---

## 五、技术特色

### 5.1 架构设计
- **组件化设计**：功能模块清晰分离
- **响应式数据管理**：Vue 3 Composition API
- **统一状态管理**：集中的数据状态控制

### 5.2 用户体验
- **现代化UI设计**：Element Plus + 自定义样式
- **智能搜索**：关键字搜索 + 精确查询
- **懒加载**：大数据量下的性能优化
- **实时反馈**：操作状态和结果提示

### 5.3 数据处理
- **版本管理**：自动筛选最新版本和迭代
- **关系管理**：完整的BOM层级关系处理
- **数据验证**：前端表单验证 + 后端数据校验

### 5.4 错误处理
- **统一错误处理**：简化的错误提示
- **网络异常处理**：请求失败的优雅降级
- **用户友好提示**：清晰的操作反馈

---

## 六、功能总结

这个 `PartBom.vue` 文件实现了一个完整的企业级部件和BOM管理系统，主要功能包括：

1. **部件生命周期管理**：创建、查询、编辑、删除、版本管理
2. **BOM关系管理**：新增子项、修改关系、删除关系、查看层级
3. **分类属性管理**：动态分类选择、扩展属性配置
4. **数据可视化**：BOM树形结构、统计信息展示
5. **用户交互优化**：搜索筛选、批量操作、实时反馈

该组件展现了现代前端开发的最佳实践，具有良好的可维护性、可扩展性和用户体验。 